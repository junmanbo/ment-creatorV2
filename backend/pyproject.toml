[project]
name = "ment-creatorv2"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiofiles>=24.1.0",
    "alembic>=1.16.1",
    "asyncpg>=0.30.0",
    "celery>=5.5.2",
    "fastapi>=0.115.12",
    "mypy>=1.15.0",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "python-dotenv>=1.1.0",
    "python-jose[cryptography]>=3.4.0",
    "python-multipart>=0.0.20",
    "redis>=6.1.0",
    "sqlalchemy>=2.0.41",
    "structlog>=25.3.0",
    "types-passlib>=1.7.7.20250516",
    "types-python-jose>=3.4.0.20250516",
    "uvicorn[standard]>=0.34.2",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.11.11",
]

[tool.ruff]
# Python 버전 설정
target-version = "py311"

# 라인 길이 (black과 동일)
line-length = 88

# 체크할 파일 확장자
extend-include = ["*.ipynb"]

# 제외할 디렉토리/파일
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "alembic/versions",
]

# Lint 설정 (새로운 구조)
[tool.ruff.lint]
# 활용할 규칙 설정
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate (commented code)
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

# 무시할 규칙
ignore = [
    "E501",    # line too long (black이 처리)
    "B008",    # do not perform function calls in argument defaults
    "PLR0913", # too many arguments 
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "ERA001",  # commented out code (개발 중에는 허용)
    "RUF022",  # ruff-specific rule for unused imports
]

# 파일별 무시 규칙
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused imports in __init__.py
"tests/*" = [
    "ARG",
    "PLR2004",
] # test files can have unused args and magic values
"alembic/versions/*" = ["ALL"] # migration files ignore all rules

# Import 정렬 설정 (isort 대체)
[tool.ruff.lint.isort]
known-first-party = ["app"]
force-single-line = false
force-sort-within-sections = false
split-on-trailing-comma = true

# mccabe 복잡도 설정
[tool.ruff.lint.mccabe]
max-complexity = 10

# pylint 설정
[tool.ruff.lint.pylint]
max-args = 10
max-branches = 15
max-returns = 10
max-statements = 80

# pyupgrade 설정
[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

# 포매팅 설정 (새로 추가)
[tool.ruff.format]
# 문자열 따옴표 스타일
quote-style = "double"

# 들여쓰기 스타일
indent-style = "space"

# 매직 트레일링 콤마 처리
skip-magic-trailing-comma = false

# docstring 코드 포매팅
docstring-code-format = true

# # tool ruff fix
# [tool.ruff.fix]
# # 자동 수정 시 적용할 규칙
# select = [
#     "E",    # pycodestyle errors
#     "W",    # pycodestyle warnings  
#     "F",    # pyflakes
#     "I",    # isort
#     "B",    # flake8-bugbear
#     "C4",   # flake8-comprehensions
#     "UP",   # pyupgrade
#     "ARG",  # flake8-unused-arguments
#     "SIM",  # flake8-simplify
#     "TCH",  # flake8-type-checking
#     "PTH",  # flake8-use-pathlib
# ]
# # 자동 수정 시 무시할 규칙
# ignore = [
#     "E501",   # line too long (black이 처리)
#     "B008",   # do not perform function calls in argument defaults
#     "PLR0913", # too many arguments 
#     "PLR0915", # too many statements
#     "PLR2004", # magic value used in comparison
# ]
# # 자동 수정 시 파일별 무시 규칙
# [tool.ruff.fix.per-file-ignores]
# "__init__.py" = ["F401"]  # unused imports in __init__.py
# "tests/*" = ["ARG", "PLR2004"]  # test files can have unused args and magic values
# "alembic/versions/*" = ["ALL"]  # migration files ignore all rules
# # 자동 수정 시 import 정렬 설정
# [tool.ruff.fix.isort]
# known-first-party = ["app"]
# force-single-line = false
# force-sort-within-sections = false
# split-on-trailing-comma = true

# 개발 환경 설정

# Pytest 설정
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/venv/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
